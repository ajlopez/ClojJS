
(println "Predicates tests")

(is (= (nil? nil) true))
(is (= (nil? js/undefined) true))
(is (= (nil? false) false))
(is (= (nil? true) false))
(is (= (nil? 42) false))
(is (= (nil? "foo") false))
(is (= (nil? :foo) false))
(is (= (nil? ()) false))

(is (= (some? nil) false))
(is (= (some? js/undefined) false))
(is (= (some? false) true))
(is (= (some? true) true))
(is (= (some? 42) true))
(is (= (some? "foo") true))
(is (= (some? :foo) true))
(is (= (some? ()) true))

(is (= (symbol? 'x) true))
(is (= (symbol? nil) false))
(is (= (symbol? true) false))
(is (= (symbol? false) false))
(is (= (symbol? 42) false))
(is (= (symbol? "foo") false))
(is (= (symbol? :foo) false))
(is (= (symbol? ()) false))
(is (= (symbol? '(1 2 3)) false))
(is (= (symbol? [1 2 3]) false))

(is (= (keyword? :x) true))
(is (= (keyword? nil) false))
(is (= (keyword? true) false))
(is (= (keyword? false) false))
(is (= (keyword? 42) false))
(is (= (keyword? "foo") false))
(is (= (keyword? 'foo) false))
(is (= (keyword? ()) false))
(is (= (keyword? '(1 2 3)) false))
(is (= (keyword? [1 2 3]) false))

(is (= (vector? :x) false))
(is (= (vector? nil) false))
(is (= (vector? true) false))
(is (= (vector? false) false))
(is (= (vector? 42) false))
(is (= (vector? "foo") false))
(is (= (vector? 'foo) false))
(is (= (vector? ()) false))
(is (= (vector? '(1 2 3)) false))
(is (= (vector? [1 2 3]) true))

(is (= (map? :x) false))
(is (= (map? nil) false))
(is (= (map? true) false))
(is (= (map? false) false))
(is (= (map? 42) false))
(is (= (map? "foo") false))
(is (= (map? 'foo) false))
(is (= (map? ()) false))
(is (= (map? '(1 2 3)) false))
(is (= (map? [1 2 3]) false))
(is (= (map? {:one 1 :two 2}) true))

(is (array? (to-array '(1 2 3))))
(is (array? (to-array [1 2 3])))

(is (seq? '(1 2 3)))
(is (seq? ()))
(is (seq? [1 2 3]))

(is (= (seq? "foo") false))
(is (= (seq? 42) false))
(is (= (seq? 'x) false))
(is (= (seq? :foo) false))
(is (= (seq? {}) false))

(is (= (set? :x) false))
(is (= (set? nil) false))
(is (= (set? true) false))
(is (= (set? false) false))
(is (= (set? 42) false))
(is (= (set? "foo") false))
(is (= (set? 'foo) false))
(is (= (set? ()) false))
(is (= (set? '(1 2 3)) false))
(is (= (set? [1 2 3]) false))
(is (= (set? {:one 1 :two 2}) false))
(is (= (set? #{:one :two}) true))

(is (= (coll? {}) true))
(is (= (coll? #{}) true))
(is (= (coll? []) true))
(is (= (coll? ()) true))
(is (= (coll? '(1 2 3)) true))
(is (= (coll? "foo") false))
(is (= (coll? 42) false))
(is (= (coll? false) false))
